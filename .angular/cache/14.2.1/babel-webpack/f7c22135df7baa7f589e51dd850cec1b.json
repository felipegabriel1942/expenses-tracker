{"ast":null,"code":"import { ChangeDetectorRef } from '@angular/core';\nimport { DateUtils } from 'src/app/utils';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"../../directives/focus.directive\";\nimport * as i4 from \"../error-message/error-message.component\";\nimport * as i5 from \"./components/calendar/calendar.component\";\n\nfunction DatepickerComponent_label_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 5);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"for\", ctx_r0.options == null ? null : ctx_r0.options.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.options == null ? null : ctx_r0.options.label);\n  }\n}\n\nfunction DatepickerComponent_app_calendar_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"app-calendar\", 6);\n    i0.ɵɵlistener(\"onChange\", function DatepickerComponent_app_calendar_3_Template_app_calendar_onChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.onDateSelected($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"selectedDate\", ctx_r1.selectedDate);\n  }\n}\n\nconst _c0 = function (a0, a1, a2) {\n  return {\n    \"datepicker__input--disabled\": a0,\n    \"datepicker__input--focused\": a1,\n    \"datepicker__input--invalid\": a2\n  };\n};\n\nconst _c1 = function (a0) {\n  return {\n    control: a0\n  };\n};\n\nexport let DatepickerComponent = /*#__PURE__*/(() => {\n  class DatepickerComponent {\n    constructor(changeDetection) {\n      this.changeDetection = changeDetection;\n      this.isFocused = false;\n      this.formattedDate = '';\n    }\n\n    ngOnInit() {}\n\n    ngAfterViewInit() {\n      this.setFormattedDate(this.control.value);\n    }\n\n    onDateSelected(date) {\n      this.isFocused = !this.isFocused;\n      this.control.setValue(date);\n      this.setFormattedDate(date);\n    }\n\n    onFocusLost(isFocused) {\n      if (!isFocused && typeof this.control.value === 'string' && this.control.value != null && this.control.value !== '') {\n        const date = DateUtils.convertStringToDate(this.control.value);\n\n        if (date && !this.control.errors) {\n          this.control.setValue(date);\n          this.setFormattedDate(this.control.value);\n        } else {\n          this.control.setValue('Invalid Date');\n          this.control.setErrors({\n            invalidDate: true\n          });\n        }\n      }\n    }\n\n    setFormattedDate(value) {\n      if (typeof value === 'string') {\n        value = DateUtils.convertStringToDate(value);\n      }\n\n      this.formattedDate = DateUtils.convertDateToString(value);\n      this.changeDetection.detectChanges();\n    }\n\n    get isDisabled() {\n      return this.options.control.disabled;\n    }\n\n    get isInvalid() {\n      return this.options.control.invalid && this.options.control.touched;\n    }\n\n    get control() {\n      return this.options.control;\n    }\n\n    get selectedDate() {\n      return this.control.value;\n    }\n\n    get selectedMonth() {\n      return this.selectedDate ? this.selectedDate.getMonth() : new Date().getMonth();\n    }\n\n    get selectedYear() {\n      return this.selectedDate ? this.selectedDate.getFullYear() : new Date().getFullYear();\n    }\n\n  }\n\n  DatepickerComponent.ɵfac = function DatepickerComponent_Factory(t) {\n    return new (t || DatepickerComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n\n  DatepickerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DatepickerComponent,\n    selectors: [[\"app-datepicker\"]],\n    inputs: {\n      options: \"options\"\n    },\n    decls: 5,\n    vars: 12,\n    consts: [[\"appFocus\", \"\", 1, \"datepicker\", 3, \"onFocus\"], [\"class\", \"datepicker__label\", 3, \"for\", 4, \"ngIf\"], [\"maxlength\", \"10\", 1, \"datepicker__input\", 3, \"formControl\", \"ngClass\", \"value\"], [3, \"selectedDate\", \"onChange\", 4, \"ngIf\"], [3, \"options\"], [1, \"datepicker__label\", 3, \"for\"], [3, \"selectedDate\", \"onChange\"]],\n    template: function DatepickerComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵlistener(\"onFocus\", function DatepickerComponent_Template_div_onFocus_0_listener($event) {\n          return ctx.isFocused = $event;\n        })(\"onFocus\", function DatepickerComponent_Template_div_onFocus_0_listener($event) {\n          return ctx.onFocusLost($event);\n        });\n        i0.ɵɵtemplate(1, DatepickerComponent_label_1_Template, 2, 2, \"label\", 1);\n        i0.ɵɵelement(2, \"input\", 2);\n        i0.ɵɵtemplate(3, DatepickerComponent_app_calendar_3_Template, 1, 1, \"app-calendar\", 3);\n        i0.ɵɵelement(4, \"app-error-message\", 4);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.options == null ? null : ctx.options.label);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formControl\", ctx.control)(\"ngClass\", i0.ɵɵpureFunction3(6, _c0, ctx.isDisabled, ctx.isFocused, ctx.isInvalid))(\"value\", ctx.formattedDate);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isFocused);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"options\", i0.ɵɵpureFunction1(10, _c1, ctx.control));\n      }\n    },\n    dependencies: [i1.NgClass, i1.NgIf, i2.DefaultValueAccessor, i2.NgControlStatus, i2.MaxLengthValidator, i2.FormControlDirective, i3.FocusDirective, i4.ErrorMessageComponent, i5.CalendarComponent],\n    styles: [\".datepicker__input[_ngcontent-%COMP%]{width:100%;padding:1.2rem;border-radius:.5rem;border:1px solid var(--color-light-grey);font-family:inherit;font-size:inherit;margin-top:1rem;outline:none}.datepicker__input--disabled[_ngcontent-%COMP%]{background-color:var(--color-grey-transparent);cursor:default}.datepicker__input--invalid[_ngcontent-%COMP%]{border:1px solid var(--color-error)}.datepicker__input--focused[_ngcontent-%COMP%]{border:1px solid var(--color-purple);box-shadow:0 0 0 4px var(--color-blue-violet-transparent);transition:box-shadow .3s}\"]\n  });\n  return DatepickerComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}