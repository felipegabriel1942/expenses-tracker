{"ast":null,"code":"import { ChangeDetectorRef, EventEmitter, SimpleChanges } from '@angular/core';\nimport { faAngleLeft, faAngleRight } from '@fortawesome/free-solid-svg-icons';\nimport { Months } from '../../enums/months.enum';\nimport { Weekdays } from '../../enums/weekdays.enum';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@fortawesome/angular-fontawesome\";\n\nfunction CalendarComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"titlecase\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const weekday_r2 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, weekday_r2), \" \");\n  }\n}\n\nconst _c0 = function (a0, a1) {\n  return {\n    \"calendar__day--selected\": a0,\n    \"calendar__day--disabled\": a1\n  };\n};\n\nfunction CalendarComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵlistener(\"click\", function CalendarComponent_div_11_Template_div_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const date_r3 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.onSelectDate(date_r3));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const date_r3 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(2, _c0, ctx_r1.isSelectedDate(date_r3), !ctx_r1.isFromCurrentMonth(date_r3)));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", date_r3 == null ? null : date_r3.getDate(), \" \");\n  }\n}\n\nexport let CalendarComponent = /*#__PURE__*/(() => {\n  class CalendarComponent {\n    constructor(changeDetection) {\n      this.changeDetection = changeDetection;\n      this.onChange = new EventEmitter();\n      this.faAngleLeft = faAngleLeft;\n      this.faAngleRight = faAngleRight;\n      this.weekdays = [];\n      this.dates = [];\n    }\n\n    ngOnInit() {}\n\n    ngAfterViewInit() {\n      this.currentMonth = this.selectedMonth;\n      this.currentYear = this.selectedYear;\n      this.getWeekdays();\n      this.generateDatepickerDates();\n      this.changeDetection.detectChanges();\n    }\n\n    ngOnChanges(changes) {\n      var _a;\n\n      if ((_a = changes === null || changes === void 0 ? void 0 : changes.selectedDate) === null || _a === void 0 ? void 0 : _a.currentValue) {\n        if (typeof this.selectedDate !== 'string' && this.selectedDate.toString() !== 'Invalid Date') {\n          this.generateDatepickerDates();\n        }\n      }\n    }\n\n    getWeekdays() {\n      this.weekdays = Object.values(Weekdays).filter(value => typeof value === 'string');\n    }\n\n    nextMonth() {\n      if (this.currentMonth + 1 > 11) {\n        this.currentMonth = 0;\n        this.currentYear++;\n      } else {\n        this.currentMonth++;\n      }\n\n      this.generateDatepickerDates();\n    }\n\n    previousMonth() {\n      if (this.currentMonth - 1 < 0) {\n        this.currentMonth = 11;\n        this.currentYear--;\n      } else {\n        this.currentMonth--;\n      }\n\n      this.generateDatepickerDates();\n    }\n\n    generateDatepickerDates() {\n      this.dates = this.getActualMonthDates();\n\n      if (this.dates == null || this.dates.length === 0) {\n        return;\n      }\n\n      if (!this.firstDayIsSunday(this.dates)) {\n        this.dates.unshift(...this.getPreviousMonthDates());\n      }\n\n      this.dates.push(...this.getNextMonthDates());\n    }\n\n    firstDayIsSunday(dates) {\n      return dates[0].getDay() === 0;\n    }\n\n    getPreviousMonthDates() {\n      const previousMonthDates = this.generatePreviousMonthDates();\n      const numberOfdays = this.dates[0].getDay();\n      return previousMonthDates.slice(previousMonthDates.length - numberOfdays, previousMonthDates.length);\n    }\n\n    getNextMonthDates() {\n      const nextMonthDates = this.generateNextMonthDates();\n      const totalOfDaysOnCalendar = 42;\n      const numberOfDays = totalOfDaysOnCalendar - this.dates.length + this.dates[0].getDay();\n      return nextMonthDates.slice(0, numberOfDays);\n    }\n\n    getActualMonthDates() {\n      return this.createDates(this.currentYear, this.currentMonth);\n    }\n\n    generatePreviousMonthDates() {\n      const year = this.currentMonth - 1 < 0 ? this.currentYear - 1 : this.currentYear;\n      const month = this.currentMonth - 1 < 0 ? 11 : this.currentMonth - 1;\n      return this.createDates(year, month);\n    }\n\n    generateNextMonthDates() {\n      const year = this.currentMonth + 1 > 11 ? this.currentYear + 1 : this.currentYear;\n      const month = this.currentMonth + 1 > 11 ? 0 : this.currentMonth + 1;\n      return this.createDates(year, month);\n    }\n\n    createDates(year, month) {\n      const date = new Date(year, month, 1);\n      const dates = [];\n\n      while (date.getMonth() === month) {\n        dates.push(new Date(date));\n        date.setDate(date.getDate() + 1);\n      }\n\n      return dates;\n    }\n\n    onSelectDate(date) {\n      if (!this.isFromCurrentMonth(date)) {\n        return;\n      }\n\n      this.onChange.emit(date);\n    }\n\n    isFromCurrentMonth(date) {\n      return date.getMonth() === this.currentMonth && date.getFullYear() === this.currentYear;\n    }\n\n    isSelectedDate(date) {\n      if (!this.selectedDate || typeof this.selectedDate === 'string') {\n        return false;\n      }\n\n      return date.getFullYear() === this.selectedDate.getFullYear() && date.getMonth() === this.selectedDate.getMonth() && date.getDate() === this.selectedDate.getDate() && this.currentMonth === this.selectedDate.getMonth();\n    }\n\n    get month() {\n      return Object.values(Months)[this.currentMonth];\n    }\n\n    get selectedMonth() {\n      return this.selectedDate && this.selectedDate.toString() !== 'Invalid Date' ? this.selectedDate.getMonth() : new Date().getMonth();\n    }\n\n    get selectedYear() {\n      return this.selectedDate && this.selectedDate.toString() !== 'Invalid Date' ? this.selectedDate.getFullYear() : new Date().getFullYear();\n    }\n\n  }\n\n  CalendarComponent.ɵfac = function CalendarComponent_Factory(t) {\n    return new (t || CalendarComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n\n  CalendarComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CalendarComponent,\n    selectors: [[\"app-calendar\"]],\n    inputs: {\n      selectedDate: \"selectedDate\"\n    },\n    outputs: {\n      onChange: \"onChange\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 12,\n    vars: 8,\n    consts: [[1, \"calendar\"], [1, \"calendar__header\"], [1, \"calendar__button\", 3, \"click\"], [3, \"icon\"], [1, \"calendar__body\"], [\"class\", \"calendar__weekday\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"calendar__day\", 3, \"ngClass\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"calendar__weekday\"], [1, \"calendar__day\", 3, \"ngClass\", \"click\"]],\n    template: function CalendarComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n        i0.ɵɵlistener(\"click\", function CalendarComponent_Template_div_click_2_listener() {\n          return ctx.previousMonth();\n        });\n        i0.ɵɵelement(3, \"fa-icon\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\");\n        i0.ɵɵtext(5);\n        i0.ɵɵpipe(6, \"titlecase\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 2);\n        i0.ɵɵlistener(\"click\", function CalendarComponent_Template_div_click_7_listener() {\n          return ctx.nextMonth();\n        });\n        i0.ɵɵelement(8, \"fa-icon\", 3);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"div\", 4);\n        i0.ɵɵtemplate(10, CalendarComponent_div_10_Template, 3, 3, \"div\", 5);\n        i0.ɵɵtemplate(11, CalendarComponent_div_11_Template, 2, 5, \"div\", 6);\n        i0.ɵɵelementEnd()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"icon\", ctx.faAngleLeft);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate2(\"\", i0.ɵɵpipeBind1(6, 6, ctx.month), \" \", ctx.currentYear, \"\");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"icon\", ctx.faAngleRight);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.weekdays);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.dates);\n      }\n    },\n    dependencies: [i1.NgClass, i1.NgForOf, i2.FaIconComponent, i1.TitleCasePipe],\n    styles: [\".calendar[_ngcontent-%COMP%]{position:absolute;border:1px solid var(--color-light-grey);border-radius:.5rem;z-index:1;box-shadow:0 2px 5px 2px var(--color-light-grey);background-color:var(--color-white);width:26rem}.calendar__header[_ngcontent-%COMP%]{display:flex;justify-content:space-between;align-items:center;background-color:var(--color-purple);padding:1rem;color:var(--color-white);border-radius:.5rem .5rem 0 0}.calendar__button[_ngcontent-%COMP%]{cursor:pointer;display:flex;align-items:center;justify-content:center;width:2rem;height:2rem;border-radius:3rem;padding:1.5rem}.calendar__button[_ngcontent-%COMP%]:hover{background-color:var(--color-blue-violet-transparent)}.calendar__body[_ngcontent-%COMP%]{padding:1rem;height:26rem;display:grid;grid-template-columns:repeat(7,1fr)}.calendar__day[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;cursor:pointer}.calendar__day[_ngcontent-%COMP%]:hover{background-color:var(--color-grey-transparent);border-radius:3rem}.calendar__day--selected[_ngcontent-%COMP%]{background-color:var(--color-purple);border-radius:3rem;color:var(--color-white);transition:background-color .5s}.calendar__day--disabled[_ngcontent-%COMP%]{color:var(--color-pink-swan);cursor:default}.calendar__day--disabled[_ngcontent-%COMP%]:hover{background-color:transparent}.calendar__weekday[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center}\"]\n  });\n  return CalendarComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}