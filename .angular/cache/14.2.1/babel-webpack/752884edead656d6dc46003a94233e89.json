{"ast":null,"code":"import { ElementRef, EventEmitter, Renderer2 } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nexport let FocusDirective = /*#__PURE__*/(() => {\n  class FocusDirective {\n    constructor(element, renderer) {\n      this.element = element;\n      this.renderer = renderer;\n      this.onFocus = new EventEmitter();\n    }\n\n    ngOnInit() {\n      this.listenDomEvents();\n    }\n\n    ngOnDestroy() {\n      this.unlistener();\n    }\n\n    listenDomEvents() {\n      this.renderer.listen('window', 'click', event => {\n        if (event.pointerId < 0) {\n          return;\n        }\n\n        const isFocused = this.componentIsFocused(event);\n        this.onFocus.emit(isFocused);\n      });\n    }\n\n    componentIsFocused(event) {\n      return this.element.nativeElement.contains(event.target);\n    }\n\n  }\n\n  FocusDirective.ɵfac = function FocusDirective_Factory(t) {\n    return new (t || FocusDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n  };\n\n  FocusDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: FocusDirective,\n    selectors: [[\"\", \"appFocus\", \"\"]],\n    outputs: {\n      onFocus: \"onFocus\"\n    }\n  });\n  return FocusDirective;\n})();","map":null,"metadata":{},"sourceType":"module"}