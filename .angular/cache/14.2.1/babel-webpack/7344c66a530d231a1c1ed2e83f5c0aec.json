{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"ngx-mask\";\nimport * as i4 from \"../../directives/focus.directive\";\nimport * as i5 from \"../error-message/error-message.component\";\n\nfunction InputComponent_label_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"label\", 4);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"for\", ctx_r0.options == null ? null : ctx_r0.options.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.options == null ? null : ctx_r0.options.label);\n  }\n}\n\nconst _c0 = function (a0, a1, a2) {\n  return {\n    \"input__field--disabled\": a0,\n    \"input__field--focused\": a1,\n    \"input__field--invalid\": a2\n  };\n};\n\nconst _c1 = function (a0) {\n  return {\n    control: a0\n  };\n};\n\nexport let InputComponent = /*#__PURE__*/(() => {\n  class InputComponent {\n    constructor() {\n      this.onFocus = new EventEmitter();\n      this.isFocused = false;\n    }\n\n    ngOnInit() {}\n\n    ngOnDestroy() {}\n\n    setFocus(focused) {\n      this.isFocused = focused && !this.isDisabled;\n      this.onFocus.emit(this.isFocused);\n    }\n\n    get isDisabled() {\n      return this.options.control.disabled;\n    }\n\n    get isInvalid() {\n      return this.options.control.invalid && this.options.control.touched;\n    }\n\n    get prefix() {\n      const prefixes = {\n        [\"CURRENCY\"\n        /* CURRENCY */\n        ]: 'R$ '\n      };\n      return prefixes[this.options.type] || '';\n    }\n\n    get mask() {\n      const masks = {\n        [\"CURRENCY\"\n        /* CURRENCY */\n        ]: 'separator.2'\n      };\n      return masks[this.options.type] || '';\n    }\n\n  }\n\n  InputComponent.ɵfac = function InputComponent_Factory(t) {\n    return new (t || InputComponent)();\n  };\n\n  InputComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: InputComponent,\n    selectors: [[\"app-input\"]],\n    inputs: {\n      options: \"options\"\n    },\n    outputs: {\n      onFocus: \"onFocus\"\n    },\n    decls: 4,\n    vars: 13,\n    consts: [[1, \"input\"], [\"class\", \"input__label\", 3, \"for\", 4, \"ngIf\"], [\"appFocus\", \"\", \"type\", \"text\", 1, \"input__field\", 3, \"formControl\", \"ngClass\", \"prefix\", \"mask\", \"thousandSeparator\", \"onFocus\"], [3, \"options\"], [1, \"input__label\", 3, \"for\"]],\n    template: function InputComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, InputComponent_label_1_Template, 2, 2, \"label\", 1);\n        i0.ɵɵelementStart(2, \"input\", 2);\n        i0.ɵɵlistener(\"onFocus\", function InputComponent_Template_input_onFocus_2_listener($event) {\n          return ctx.setFocus($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(3, \"app-error-message\", 3);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.options == null ? null : ctx.options.label);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formControl\", ctx.options == null ? null : ctx.options.control)(\"ngClass\", i0.ɵɵpureFunction3(7, _c0, ctx.isDisabled, ctx.isFocused, ctx.isInvalid))(\"prefix\", ctx.prefix)(\"mask\", ctx.mask)(\"thousandSeparator\", \".\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"options\", i0.ɵɵpureFunction1(11, _c1, ctx.options == null ? null : ctx.options.control));\n      }\n    },\n    dependencies: [i1.NgClass, i1.NgIf, i2.DefaultValueAccessor, i2.NgControlStatus, i2.FormControlDirective, i3.MaskDirective, i4.FocusDirective, i5.ErrorMessageComponent],\n    styles: [\".input__field[_ngcontent-%COMP%]{width:100%;padding:1.2rem;border-radius:.5rem;border:1px solid var(--color-light-grey);font-family:inherit;font-size:inherit;margin-top:1rem;outline:none}.input__field--disabled[_ngcontent-%COMP%]{background-color:var(--color-grey-transparent);cursor:default}.input__field--invalid[_ngcontent-%COMP%]{border:1px solid var(--color-error)}.input__field--focused[_ngcontent-%COMP%]{border:1px solid var(--color-purple);box-shadow:0 0 0 4px var(--color-blue-violet-transparent);transition:box-shadow .3s}\"]\n  });\n  return InputComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}