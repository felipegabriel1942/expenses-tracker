{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { IC_CHECK_WHITE } from './../../../consts/assets';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"../../directives/focus.directive\";\n\nconst _c0 = function (a0, a1, a2) {\n  return {\n    \"checkbox-custom__checkbox--checked\": a0,\n    \"checkbox-custom__checkbox--disabled\": a1,\n    \"checkbox-custom__checkbox--focused\": a2\n  };\n};\n\nconst _c1 = function (a0) {\n  return {\n    \"checkbox-custom__label--disabled\": a0\n  };\n};\n\nexport let CheckboxComponent = /*#__PURE__*/(() => {\n  class CheckboxComponent {\n    constructor() {\n      this.valueChange = new EventEmitter();\n      this.IC_CHECK_WHITE = IC_CHECK_WHITE;\n      this.isFocused = false;\n    }\n\n    ngOnInit() {\n      this.initOptions();\n    }\n\n    ngOnDestroy() {}\n\n    initOptions() {}\n\n    setFocus(focused) {\n      this.isFocused = focused && !this.isChecked;\n    }\n\n    onChange() {\n      var _a, _b;\n\n      this.valueChange.emit(!((_b = (_a = this.options) === null || _a === void 0 ? void 0 : _a.control) === null || _b === void 0 ? void 0 : _b.value));\n    }\n\n    get isChecked() {\n      return this.options.control.value;\n    }\n\n    get isDisabled() {\n      return this.options.control.disabled;\n    }\n\n  }\n\n  CheckboxComponent.ɵfac = function CheckboxComponent_Factory(t) {\n    return new (t || CheckboxComponent)();\n  };\n\n  CheckboxComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CheckboxComponent,\n    selectors: [[\"app-checkbox\"]],\n    inputs: {\n      options: \"options\"\n    },\n    outputs: {\n      valueChange: \"valueChange\"\n    },\n    decls: 7,\n    vars: 14,\n    consts: [[1, \"checkbox\"], [\"type\", \"checkbox\", 1, \"checkbox__input\", 3, \"id\", \"formControl\", \"click\"], [\"appFocus\", \"\", 1, \"checkbox-custom\", 3, \"for\", \"onFocus\"], [1, \"checkbox-custom__checkbox\", 3, \"ngClass\"], [1, \"checkbox-custom__icon\", 3, \"src\", \"hidden\"], [1, \"checkbox-custom__label\", 3, \"ngClass\"]],\n    template: function CheckboxComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"input\", 1);\n        i0.ɵɵlistener(\"click\", function CheckboxComponent_Template_input_click_1_listener() {\n          return ctx.onChange();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"label\", 2);\n        i0.ɵɵlistener(\"onFocus\", function CheckboxComponent_Template_label_onFocus_2_listener($event) {\n          return ctx.setFocus($event);\n        });\n        i0.ɵɵelementStart(3, \"span\", 3);\n        i0.ɵɵelement(4, \"img\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"span\", 5);\n        i0.ɵɵtext(6);\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"id\", ctx.options == null ? null : ctx.options.id)(\"formControl\", ctx.options == null ? null : ctx.options.control);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"for\", ctx.options == null ? null : ctx.options.id);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction3(8, _c0, ctx.isChecked, ctx.isDisabled, ctx.isFocused));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"src\", ctx.IC_CHECK_WHITE, i0.ɵɵsanitizeUrl)(\"hidden\", !(ctx.options == null ? null : ctx.options.control == null ? null : ctx.options.control.value));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(12, _c1, ctx.isDisabled));\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(ctx.options == null ? null : ctx.options.label);\n      }\n    },\n    dependencies: [i1.NgClass, i2.CheckboxControlValueAccessor, i2.NgControlStatus, i2.FormControlDirective, i3.FocusDirective],\n    styles: [\".checkbox__input[_ngcontent-%COMP%]{display:none}.checkbox-custom__checkbox[_ngcontent-%COMP%]{border:1px solid var(--color-pink-swan);padding:.2rem .7rem;border-radius:.3rem;margin-right:.7rem;cursor:pointer}.checkbox-custom__checkbox--checked[_ngcontent-%COMP%]{background-color:var(--color-purple);padding:.2rem .3rem;transition:background-color .3s}.checkbox-custom__checkbox--disabled[_ngcontent-%COMP%]{background-color:var(--color-grey-transparent);cursor:default}.checkbox-custom__checkbox--focused[_ngcontent-%COMP%]{border:1px solid var(--color-purple);box-shadow:0 0 0 4px var(--color-blue-violet-transparent);transition:box-shadow .3s}.checkbox-custom__label[_ngcontent-%COMP%]{cursor:pointer}.checkbox-custom__label--disabled[_ngcontent-%COMP%]{color:var(--color-grey);cursor:default}.checkbox-custom__icon[_ngcontent-%COMP%]{height:.8rem;vertical-align:middle}\"]\n  });\n  return CheckboxComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}