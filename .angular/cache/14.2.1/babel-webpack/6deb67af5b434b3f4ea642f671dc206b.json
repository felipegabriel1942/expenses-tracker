{"ast":null,"code":"import { ValidationUtils } from 'src/app/utils';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\n\nfunction ErrorMessageComponent_p_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 1);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.errorMessage, \"\\n\");\n  }\n}\n\nexport let ErrorMessageComponent = /*#__PURE__*/(() => {\n  class ErrorMessageComponent {\n    constructor() {}\n\n    ngOnInit() {}\n\n    get isInvalid() {\n      return this.options.control.invalid && this.options.control.touched;\n    }\n\n    get errorMessage() {\n      return ValidationUtils.getErrorMessage(this.options.control.errors);\n    }\n\n  }\n\n  ErrorMessageComponent.ɵfac = function ErrorMessageComponent_Factory(t) {\n    return new (t || ErrorMessageComponent)();\n  };\n\n  ErrorMessageComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ErrorMessageComponent,\n    selectors: [[\"app-error-message\"]],\n    inputs: {\n      options: \"options\"\n    },\n    decls: 1,\n    vars: 1,\n    consts: [[\"class\", \"error-message\", 4, \"ngIf\"], [1, \"error-message\"]],\n    template: function ErrorMessageComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, ErrorMessageComponent_p_0_Template, 2, 1, \"p\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.isInvalid);\n      }\n    },\n    dependencies: [i1.NgIf],\n    styles: [\".error-message[_ngcontent-%COMP%]{padding-top:.3rem;color:var(--color-error)}\"]\n  });\n  return ErrorMessageComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}