{"ast":null,"code":"import { ChangeDetectorRef } from '@angular/core';\nimport { ButtonColorEnum } from './enums/button-color.enum';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\n\nconst _c0 = function (a0) {\n  return {\n    \"background-color\": a0\n  };\n};\n\nexport let ButtonComponent = /*#__PURE__*/(() => {\n  class ButtonComponent {\n    constructor(changeDetection) {\n      this.changeDetection = changeDetection;\n    }\n\n    ngAfterViewChecked() {\n      if (this.options != null && this.options.color == null) {\n        this.options.color = ButtonColorEnum.PRIMARY;\n        this.changeDetection.detectChanges();\n      }\n    }\n\n  }\n\n  ButtonComponent.ɵfac = function ButtonComponent_Factory(t) {\n    return new (t || ButtonComponent)(i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n\n  ButtonComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ButtonComponent,\n    selectors: [[\"app-button\"]],\n    inputs: {\n      options: \"options\"\n    },\n    decls: 2,\n    vars: 4,\n    consts: [[1, \"button\", 3, \"ngStyle\"]],\n    template: function ButtonComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction1(2, _c0, ctx.options == null ? null : ctx.options.color));\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx.options == null ? null : ctx.options.text, \"\\n\");\n      }\n    },\n    dependencies: [i1.NgStyle],\n    styles: [\".button[_ngcontent-%COMP%]{cursor:pointer;color:#fff;padding:1.3rem;border-radius:.7rem;transition:all .2s;margin:.5rem;display:inline-flex;box-shadow:.2rem .3rem .3rem 0 var(--color-light-grey)}.button[_ngcontent-%COMP%]:active, .button[_ngcontent-%COMP%]:focus{outline:none;transform:translateY(-1px);box-shadow:0 .5rem 1rem var(--color-light-grey, .2)}\"]\n  });\n  return ButtonComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}